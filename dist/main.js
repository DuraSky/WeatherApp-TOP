(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),i.push([e.id,"body{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    grid-template-rows: auto 1fr;\n}\n\nh1{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n}\n\ninput{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n    font-size: 1em;\n}\n\ninput:focus{\n    border: none;\n    outline: none;\n}\n\n#content>div{\n    background-color: red;\n}\n\n#headline{\n    display: flex;\n\n    gap: 5px;\n    flex-grow: 1;\n}\n\n#searchDiv{\n    grid-column: 2/3;\n    justify-items: center;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n}\n\n#townForm{\n    border-bottom: 1px solid;\n}\n\n#searchForm{\n    display: flex;\n}\n\n#searchForm >button{\n    border: none;\n    background: none;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n}\n\n#content{\n    grid-column: 2/3;\n    grid-row: 2/3;\n\n}\n\n#mainInfo{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n#forecast{\n    grid-column:  1/3;\n\n    display: flex;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,iCAAiC;IACjC,UAAU;IACV,SAAS;IACT,YAAY;;IAEZ,aAAa;IACb,kCAAkC;IAClC,4BAA4B;AAChC;;AAEA;IACI,iCAAiC;IACjC,UAAU;IACV,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,iCAAiC;IACjC,UAAU;IACV,SAAS;IACT,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;;IAEb,QAAQ;IACR,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;;IAErB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;;AAEvB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,UAAU;IACV,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,aAAa;;AAEjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;AAC/B;;AAEA;IACI,iBAAiB;;IAEjB,aAAa;AACjB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nbody{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    grid-template-rows: auto 1fr;\n}\n\nh1{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n}\n\ninput{\n    font-family: 'Roboto', sans-serif;\n    padding: 0;\n    margin: 0;\n    border: none;\n    font-size: 1em;\n}\n\ninput:focus{\n    border: none;\n    outline: none;\n}\n\n#content>div{\n    background-color: red;\n}\n\n#headline{\n    display: flex;\n\n    gap: 5px;\n    flex-grow: 1;\n}\n\n#searchDiv{\n    grid-column: 2/3;\n    justify-items: center;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n}\n\n#townForm{\n    border-bottom: 1px solid;\n}\n\n#searchForm{\n    display: flex;\n}\n\n#searchForm >button{\n    border: none;\n    background: none;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n}\n\n#content{\n    grid-column: 2/3;\n    grid-row: 2/3;\n\n}\n\n#mainInfo{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n#forecast{\n    grid-column:  1/3;\n\n    display: flex;\n}\n\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],l=a[s]||0,p="".concat(s," ").concat(l);a[s]=l+1;var u=t(p),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var m=o(A,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var d=r(e,o),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),d=t.n(c),s=t(216),l=t.n(s),p=t(589),u=t.n(p),A=t(426),m={};m.styleTagTransform=u(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=document.getElementById("townForm");document.getElementById("search").addEventListener("click",(async()=>{let e=f.value;e="Bohumin";let n=await async function(e){try{let e="http://api.weatherapi.com/v1/forecast.json?key=59b30c4f89b04cea93794629241901&q=Bohumin&days=4&aqi=no";console.log(e);let n=await fetch(e,{mode:"cors"});if(!n.ok)throw await n.json(),new Error("Bad request");return await n.json()}catch(e){alert("Your search was not processed, either the location you are searching for is not in the database, or WeatherAPI is not working, please retry.")}}();f.value="",function(e){const n=document.getElementById("content");n.innerHTML="";const t=document.createElement("div");t.setAttribute("id","mainInfo"),console.log("lenght"),console.log(n.children.length),console.log("Inside display"),console.log(e);let r=e.location.name,o=e.location.region,a=e.location.country,i=e.location.localtime,c=document.createElement("div");c.setAttribute("id","locationDiv");let d=document.createElement("p");d.innerHTML=r;let s=document.createElement("p");s.innerHTML=o;let l=document.createElement("p");l.innerHTML=a;let p=document.createElement("p");p.innerHTML="Local time: "+i,c.appendChild(d),c.appendChild(s),c.appendChild(l),c.appendChild(p);let u=e.current.condition.text,A=e.current.temp_c,m=e.current.feelslike_c,f=e.current.humidity,h=e.current.wind_kph;const y="http:"+e.current.condition.icon;let C=document.createElement("div");C.setAttribute("id","weatherInfo");let g=document.createElement("p");g.innerHTML="Celsius: "+A;let v=document.createElement("p");v.innerHTML="Feels like :"+m;let I=document.createElement("p");I.innerHTML=u;let b=document.createElement("img");b.src=y;let E=document.createElement("p");E.innerHTML="Huminidity: "+f;let B=document.createElement("p");B.innerHTML="Wind speed Km: "+h;const T=document.createElement("div");T.setAttribute("id","forecast");let M=e.forecast.forecastday[1].date,w=e.forecast.forecastday[1].day.condition.text,L=e.forecast.forecastday[1].day.avgtemp_c,H="http:"+e.forecast.forecastday[1].day.condition.icon,x=document.createElement("div");x.setAttribute("class","day 1");let j=document.createElement("p");j.innerHTML=M;let k=document.createElement("p");k.innerHTML=w;let _=document.createElement("img");_.src=H;let S=document.createElement("p");S.innerHTML=L+" C";let F=e.forecast.forecastday[2].date,R=e.forecast.forecastday[2].day.condition.text,Y=e.forecast.forecastday[2].day.avgtemp_c,U="http:"+e.forecast.forecastday[2].day.condition.icon,Z=document.createElement("div");Z.setAttribute("class","day 2");let q=document.createElement("p");q.innerHTML=F;let N=document.createElement("p");N.innerHTML=R;let O=document.createElement("img");O.src=U;let P=document.createElement("p");P.innerHTML=Y+" C";let D=e.forecast.forecastday[3].date,V=e.forecast.forecastday[3].day.condition.text,W=e.forecast.forecastday[3].day.avgtemp_c,z="http:"+e.forecast.forecastday[3].day.condition.icon,K=document.createElement("div");K.setAttribute("class","day 3");let J=document.createElement("p");J.innerHTML=D;let Q=document.createElement("p");Q.innerHTML=V;let G=document.createElement("img");G.src=z;let X=document.createElement("p");X.innerHTML=W+" C",C.appendChild(I),C.appendChild(b),C.appendChild(g),C.appendChild(v),C.appendChild(E),C.appendChild(B),x.appendChild(j),x.appendChild(k),x.appendChild(_),x.appendChild(S),Z.appendChild(q),Z.appendChild(N),Z.appendChild(O),Z.appendChild(P),K.appendChild(J),K.appendChild(Q),K.appendChild(G),K.appendChild(X),T.appendChild(x),T.appendChild(Z),T.appendChild(K),t.appendChild(c),t.appendChild(C),t.appendChild(T),n.appendChild(t),function(e,n,t,r,o,a,i){const c=document.getElementById("content");let d=!1;const s=document.createElement("button");s.setAttribute("id","switch"),s.innerHTML="Switch Metrics",s.addEventListener("click",(()=>{let c=e.current.temp_c,s=e.current.temp_f,l=e.current.feelslike_c,p=e.current.feelslike_f,u=e.current.wind_kph,A=e.current.wind_mph,m=e.forecast.forecastday[1].day.avgtemp_c,f=e.forecast.forecastday[1].day.avgtemp_f,h=e.forecast.forecastday[2].day.avgtemp_c,y=e.forecast.forecastday[2].day.avgtemp_f,C=e.forecast.forecastday[3].day.avgtemp_c,g=e.forecast.forecastday[3].day.avgtemp_f;!1===d?(n.innerHTML="Farenhait: "+s,t.innerHTML="Feels like: "+p,r.innerHTML="Wind speed Km: "+A,o.innerHTML=f+" F",a.innerHTML=y+" F",i.innerHTML=g+" F",d=!0):!0===d&&(n.innerHTML="Celsius: "+c,t.innerHTML="Feels like: "+l,r.innerHTML="Wind speed Km: "+u,o.innerHTML=m+" C",a.innerHTML=h+" C",i.innerHTML=C+" C",d=!1)})),c.appendChild(s)}(e,g,v,B,S,P,X)}(n)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,